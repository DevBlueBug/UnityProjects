//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using Utility;
using Game.Entity.Task;
namespace Game.Entity.Behavior
{
	public class GBhvFollowPlayer : GBhvTimer	
	{
		public override void Do (GEntity entity, GRoom room)
		{
			var node = room.mapAstar.GetPath (
				new Vector2 ( Mathf.RoundToInt(entity.position.x),Mathf.RoundToInt(entity.position.z)),
				new Vector2 (Mathf.RoundToInt(GPlayer.PlayerPosition.x),
			             Mathf.RoundToInt(GPlayer.PlayerPosition.z)));
			if (node == null)
				return;

			System.Collections.Generic.Stack<Vector2> positions = new System.Collections.Generic.Stack<Vector2> ();

			int count = 0;
			while (node.nodePrevious != null && count++ < 20) {

				positions.Push(new Vector2(node.x,node.y));
				node = node.nodePrevious;
			}
			count = 0;
			entity.myTasks = new System.Collections.Generic.List<GTask> ();
			while (positions.Count > 0 && count++ < 20) {
				var p = positions.Pop();
				//Debug.Log("node was at " + p.x + " "  + p.y + " , " + count);
				entity.AddTask( new GTaskMove(new Vector3(p.x,0,p.y) ) );
			}
			return;
		}
	}
}

